Struct から生成したクラスでメンバーを管理するのに要素数が 10より多い時は配列を
オープンアドレス法によるハッシュテーブルの実装として利用するようにしています。
オープンアドレス法って複雑な割に弱点も多くてあんまり使ったことないですけど、あ
らかじめ要素数がわかっていたらただの線形探索よりは高速にできるっていう使いかた
みたいですね。けどこれ最初のインデックスが ID と mask のビット演算なので割と衝
突しやすいのでは。っていうかこれ mod じゃなくてビットANDでいいのかな。配列サイ
ズになにか制限があるのかな。と思ったら要素数の5倍を超える最初の2の累乗-3として
あった(-3?)。あんまり空間効率は良くないということかな。 [ruby-core:66851]
[ruby-core:69705] [ruby-core:69821] [Feature #10585]
