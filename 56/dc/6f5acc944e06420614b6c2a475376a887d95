CRuby にはメモリ確保失敗した時に GC したり NoMemoryError の発生をさせたりする
ruby_xmalloc() という関数(xmalloc() という関数マクロでも呼べる)がありますが、
rb_objspace が利用できないと利用できないためそのような時は malloc(3) を使います
。で xmalloc() で確保したメモリは xfree() で解放し、malloc() で確保したメモリは
free() で解放しないといけないのですが、rb_objspace が利用できない時も利用できて
解放時に xfree() に渡せる ruby_mimmalloc() という関数の定義を追加しています。
ruby_xmalloc() で確保したメモリは先頭に sizeof(size_t) ぶん余分に領域を確保して
、そこに確保したサイズを設定して、そのヘッダ部分をずらしたポインタを返していま
す。「本物」の xmalloc は rb_objspace に確保したメモリサイズを管理していて
xfree() でそれを減算しているのですが、mimmalloc() で確保した時にはそこの加算は
行なわれないのでこのヘッダにサイズを格納しないほうがいいような気がします。あー
でもその処理は CALC_EXACT_MALLOC_SIZE が真に定義されている時(デフォルトは 0 な
ので普段は off)だけですね。
