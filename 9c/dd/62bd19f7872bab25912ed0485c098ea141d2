include/ruby/ruby.h の NUM2LONG(), NUM2INT(), etc... の定義を __GNUC__ が定義さ
れている時は gcc の拡張を利用してマクロで記述していたのをやめて、常にインライン
関数として定義するようにしています。 gcc 向けの実装が特に早いコードを吐いている
わけじゃないということと、インライン関数だとデバッガで追いやすいということです
。もうひとつ ABI compatibility のためというコメントがあるのですが、これはどうい
うことかなぁ。マクロだと結局拡張ライブラリ等には埋め込まれてしまうからマクロか
ら呼ぶ関数に依存してしまうということかなと思ったのですが、それはインライン関数
でも同じですよね。
