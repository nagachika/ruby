st.c で st_table のハッシュテーブルのサイズに素数を利用していたのを、2の累乗の
サイズを使うように変更しています。ハッシュ関数の結果からバケットを決定するのに
素数での mod を利用することでより分散しやすくするために(というふうにわたしは理
解していましたが)していたのですが、この計算に時間がかかるので 2 の累乗のサイズ
ならビットマスクだけで処理できて高速になるため、高速化を目指して変更したという
ことだそうです。素数での mod もそもそもハッシュ関数が優秀で充分に分散した結果が
得られるなら不要ということだそうで、まあそれはそうですねぇ。 hash の実装はクラ
スによって異なり再定義も可能なので、どこかで劣化するという可能性もあるのでとり
あえず ruby 本体についてはベンチマークを追加してこの効果と衝突が頻繁に起きない
かを確認するようにしています。 [ruby-core:59836] [Feature #9425]
まあ外部のライブラリで hash を独自に定義していて、それがあまり充分に分散されて
いなくて下位ビット部分がほとんど同じだったけど素数による mod で救われてた、とい
うのがあったりする可能性はありますが、まあ気がつくほど劣化してたら hash を直せ
というのはありかもしれませんね。あとこれにより Hash オブジェクトに限らず ruby
内部で使う場合も st_table の初期テーブルサイズが 11 から 16 に増えているのも若
干気になるところです。と思いましたが小さいテーブルの場合は st_table も構造体自
体に要素を pack してヒープを使わないモードになるのであんまり影響ないかもしれな
いですね。
