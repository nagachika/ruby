openssl の公開鍵ペアの生成には計算時間がかかるので、新しめの OpenSSL には途中に
コールバック関数を呼ぶバージョンの生成関数が提供されていて(関数名が ??_ex で終
わるもの)、それを利用して鍵生成中に GVL を解放して他の Thread が動けるようにし
ています。また OpenSSL::PKey::RSA/DH/DSA.new でブロックつきの呼び出しにも対応し
て、このコールバック関数が呼ばれる度にブロックを呼ぶこともできるようにしていま
す。ブロックの中で break したり raise したり(多分 throw も大丈夫)することで鍵生
成を中断することもできるようになっています。
ブロック渡しの起動の時には GVL を解放せずに関数を呼んでいますが、yield する時に
Thread 切り替えや割り込みチェックのチャンスがあるので、どちらにしても中断は効き
ます。が計算中に別のスレッドが動かないのでブロックなし版のほうがいいですね。ブ
ロック渡しで起動しても GVL を解放して、ブロック起動するところで再度 GVL を確保
するというのも原理的にはできると思うのですが、多分 GVL を解放しつつ処理を行う
API はあるけど明示的に GVL を確保する API は(多分)提供されていないのでまあしか
たないですね。
非同期な割り込みを使うほうがメリットがあるというのがちょっとイヤではありますが
。
なおこの件はどこかのカンファレンスでPythonは鍵生成でGILを解放するのにRubyはまだ
してないの？プークスクス。って言われてついカッとなって修正することになったみた
いな経緯を耳にしております。 CRuby を dis るときっと CRuby はサイヤ人のように強
くなっていくと思うのでみんながんばって dis ってください(建設的に)。
[追記]GVL を確保する API は rb_thread_call_with_gvl() というのがありました。GVL
を確保してから渡したコールバック関数を呼んでくれるものです。例外などで抜けない
ようにするなど注意は必要ですけど。[/追記]
