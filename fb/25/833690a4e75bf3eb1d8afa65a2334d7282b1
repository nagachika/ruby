rb_alloc_tmp_buffer()/rb_free_tmp_buffer() という、内部的な String オブジェクト
のバッファを利用して、例外の発生などでメモリが回収されなくても GC で回収される
ようにすることでメモリリークを防ぐ(しかし通常のケースでは明示的に解放する)関数
がありますが、これを String オブジェクトではなく NODE 型のオブジェクトを利用す
るように書き変えています。コミットメッセージをみると NODE_ALLOCA を利用すること
でバッファの内容も mark の対象にするようにしているみたいです。チケットによると
Process.spawn が ALLOCV_N() を使って確保したバッファに VALUE を入れているため
GC の mark 漏れが発生して SEGV するという不具合との修正みたいです。
[ruby-core:70251] [Bug #11418]
うーん VALUE の配列が欲しい時は rb_ary_tmp_new() のほうを使うのがいいんじゃない
でしょうか、という気もしますね。
