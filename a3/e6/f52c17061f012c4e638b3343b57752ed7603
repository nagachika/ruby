コミットメッセージが全てを物語ってくれているのですが、ruby よる組み込みメソッド実装のスクリプト内から呼べる __builtin_inline! というメソッドで C の文を直接書いて事前の関数定義によらず直接生成したコードを使う方法をもっと拡張して、__builtin_cstmt! (__builtin_inline! の改名)、__builtin_cexpr! (引数に文字列リテラルで C の式を書いて return を自動で補った C のソースを生成してくれる。つまり return かくのめんどいというものぐさ用)、__builtin_cconst! (たぶん主に定数マクロを取得するためのもの。コンパイル時に展開されるので渡した式でローカル変数は参照できない。ローカル変数を参照しない毎回同じ結果を返すような式ならマクロじゃなくてもこっちのほうがちょっとだけ効率的なのかも)、__builtin_cinit! (生成する C のコードの同じ位置(?)に埋め込む。 #include などを追加するためらしいけどマクロ定義の追加など他にも使えそう) などの新しいメソッド呼び出し(のようにみえるもの)を追加しています。すごいなぁ拡張ライブラリもこんなふうに書けるようになったらすごそうだ。
