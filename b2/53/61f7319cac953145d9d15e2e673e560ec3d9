ObjectSpace.each_object のようにオブジェクトの heap 全てをスキャンするような操作の途中でオブジェクトの確保を含む処理があると、潜在的には処理によって増えた heap をさらにスキャンして、その処理によってまた heap が増えて……と無限に続く可能性があるとのことで(なお実際には今の実装ではスキャンする順序によりこういうことは起きないらしい)、objspace_each_objects() の実装を変更してスキャン前に page 数をカウントしてその page へのポインタも事前に配列に詰めておいてそれを利用するようにしています。ちょっと余計なメモリを使うようになるけど将来的に実装が変わった時に実際に無限ループにならないように、ということみたいです。 https://github.com/ruby/ruby/pull/4263
