Dir.chdir で呼ばれる dir_chdir() という関数内部でエンコーディングの変換をするた
め新しい String オブジェクトが生成される可能性があり、その後その中身を利用する
前にコンパイラの最適化によっては GC されてしまう可能性がある問題に対して、呼び
元の dir_s_chdir() でエンコーディングの調整をしておいてそれを渡すようにしていま
す。結局 dir_s_chdir() の最後に RB_GC_GURAD(path) はあったほうが良いような。
また check_dirname() を呼んでいるところでは逆に rb_str_encode_ospath() の呼び出
し(新しい String オブジェクトを生成する可能性がある)を check_dirname() の中で呼
ぶようにしています。check_dirname() は VALUE へのポインタを受け取ってそこに書き
戻すので、新しいオブジェクトが生成された時その VALUE が確実にメモリ上に書き込ま
れるのを狙ったものかと思います。[DEL:static 関数なので inline 化されたりすると
コンパイラの最適化能力によってはどうなるかわからないような気もしますけど。:DEL]
check_dirname() の引数には volatile 指示子が付いてるのでメモリに書き込まれるの
は保障されるようでした。
