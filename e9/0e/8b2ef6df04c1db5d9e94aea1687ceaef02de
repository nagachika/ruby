Array#& メソッドで引数の Array が空の時に空配列を返すショートカット処理を少し早
めて中間データの Hash を生成する前に返すようにしています。また Hash から
rb_hash_tbl_raw() で st_table を取り出すのを1回だけ実施してローカル変数に格納し
て使いまわすようにしています。また配列の要素を取り出すのに rb_ary_elt() から
RARRAY_AREF() を使うようにするなど細かな無駄な処理を省くようにしています。
戻り値用の Array の capa をあらかじめ self か引数の Array の大きいほうにあわせ
て初期化していたのがヒープを使わない初期化に変更されていますが、これはどんなも
んでしょうねぇ。使いかたによりけりで & で空や少ない要素数になることが期待される
使いかただとこのほうが速いでしょうし、大量の要素をもつ Array 同士の & で結果も
大きめになる場合は従来のほうが……って書いてて前者のほうがありがちな気がしてき
ました。どうなんでしょう。
