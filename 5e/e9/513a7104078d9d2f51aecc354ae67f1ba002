ブロックを def meth(&b) のように Proc オブジェクトとしてブロック引数で受けとる
と、オブジェクトの生成や、環境を持ち出せるようにスタックの引き剥がし(…は1.8時
代の話で今は嘘かも)が必要で遅くなってしまうので、ブロック引数がないほうが速いの
ですが、なんと実際に参照されるまで Proc オブジェクトの生成を遅延することで、そ
のままブロック引数を別のメソッドに渡すだけだったり、ブロック引数を受け取るけど
ブロックの呼び出しは yield を使うというようなケースでは高速に動くようにしていま
す。また VM 命令にも getblockparam と setblockparam という命令を追加しています
が、これは名前からするとブロックを呼ぶ時のものかな…。いや、ブロック引数を参照
した時に Proc 化したり、上書きした時にフラグを落としたりするためのものみたいで
すね。
確か &b はブロック引数(block argument)で、lambda{|x| } の x のようなのがブロッ
クパラメーター(block parameter) という用法だと Matz に昔教わった記憶が。
[ruby-core:83536] [Feature #14045]
それはともかく、ブロックをブロック引数として受け取ると遅いというのはずいぶん前
からどうにかできないかなーと思ってた問題ですが、このように解決できたんですねー
。凄いです。ただ b.call のように呼ぶとそこで Proc 化のコストが変わる点は変わら
ないと思いますが、どうもブロック引数をブロックを受け取ることを明示するシグネチ
ャとして書きたい(呼び出しは yield でいい)という要望があったみたいです。
