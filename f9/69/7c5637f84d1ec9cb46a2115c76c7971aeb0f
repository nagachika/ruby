メソッド呼び出しの最適化で、tool/mk_call_iseq_optimized.rb というツールを追加し
てこれで引数の数が 0～3、ローカル変数の数が 1～6 の時の
vm_call_iseq_setup_normal_0start_Nparams_Mlocals() (N と M はそれぞれ引数とロー
カル変数の数)という特別化された関数を vm_call_iseq_optimized.inc というファイル
に生成して、条件が合ったらこれを呼び出すようにしています。これらの関数は引数の
数とローカル変数の数に依存した分岐がなくなっていてそのぶん速い…と書かれている
のですが、生成された関数群も結局 vm_call_iseq_setup_normal() の param_size と
local_size にリテラルで引数を渡すようにしているだけなので、これで最適化されるっ
てことは inline 化された時にコンパイラがうまいことループ展開とかしてくれるって
ことですかね。条件に合うメソッドの呼び出しのベンチマークでは 8.3% 程度の高速化
がみられて、逆に条件に合わないものは inline cache miss で 3.4% 遅くなるとのこと
。引数やローカル変数の数をこの範囲に収めるようにする最適化が流行りそうですね。
なおここでのローカル変数の数には special variable が含まれているので、実際に書
かれているローカル変数はこれより1か2少ないものが対象になると思います(つまり 4個
が5個まで)。
