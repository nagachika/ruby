Kernel#lambda にブロック渡ししたのとブロック引数で Proc オブジェクトを渡した時とを区別してブロック引数で渡された時に lambda ではない Proc オブジェクトを作るようにしているようです。んー、しかし m(&->(){...}) みたいにしたら既に lambda? が true な Proc オブジェクトを渡すことになるんじゃないのかなぁ。 lambda かどうかは定義した場所で決まるものだと思ってたけど(そうでないと return の解釈が呼び元に至る経路で変わることになって使いずらい)。それか block_handler_type_iseq はブロックを &blk のような引数で受けたものを渡した時に限るのかな(テストはそういうケースになっている)。 [ruby-core:91616] [Bug #15620]
