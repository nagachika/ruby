Hash#each などのメソッドのブロック内で callcc で Continuation を生成して後から
ブロック内に再入した時のために、pack された Hash オブジェクトの場合インデックス
を毎回 find_packed_index_from() で再計算しているのですが、このために Hash のキ
ーに Array など破壊的変更のできるオブジェクトを利用して、格納した後でその内容を
変更して hash & eql で同一と判定されるキーが2つある状態にすると、インデックスが
先に進まなくなってしまって無限ループする不具合を解消しています。インデックス再
計算をしている時に現在のオフセットからの再計算にすることで後戻りを防いでいます
。 callcc での再入でイレテータを戻すことはできなくなりますが、まあ同一キーを作
ってしまうケースと比較してどっちがありそうかってことでしょうか。
[ruby-dev:48047] [Bug #9646]
なお callcc を生で使うのは推奨されません。大抵の場合 Fiber で代替できるでしょう
。
